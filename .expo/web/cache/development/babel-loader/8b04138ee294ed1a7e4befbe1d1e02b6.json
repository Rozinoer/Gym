{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_CLIENT, UPDATE_CLIENT, REMOVE_CLIENT } from \"../types\";\nexport var clientReducer = function clientReducer(state, action) {\n  switch (action.type) {\n    case ADD_CLIENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        clients: [].concat(_toConsumableArray(state.clients), [{\n          id: Date.now().toString(),\n          surname: action.client.surname,\n          name: action.client.name,\n          height: action.client.height,\n          weight: action.client.weight,\n          bd: action.client.data,\n          phone: action.client.phone,\n          ex: []\n        }])\n      });\n\n    case UPDATE_CLIENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        clients: _toConsumableArray(state.clients.map(function (client) {\n          if (client.id === action.client.id) {\n            client.surname = action.client.surname;\n            client.name = action.client.name;\n            client.height = action.client.height;\n            client.weight = action.client.weight;\n            client.bd = action.client.bd;\n            client.phone = action.client.phone;\n          }\n\n          return client;\n        }))\n      });\n\n    case REMOVE_CLIENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        clients: _toConsumableArray(state.clients.filter(function (client) {\n          return client.id !== action.id;\n        }))\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/aleks/Desktop/Dev/Git/gym-app/Gym/src/context/client/clientReducer.js"],"names":["ADD_CLIENT","UPDATE_CLIENT","REMOVE_CLIENT","clientReducer","state","action","type","clients","id","Date","now","toString","surname","client","name","height","weight","bd","data","phone","ex","map","filter"],"mappings":";;;;;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,aAApC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,UAAL;AACI,6CAAWI,KAAX;AAAkBG,QAAAA,OAAO,+BAAMH,KAAK,CAACG,OAAZ,IAAqB;AAC1CC,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,GAAWC,QAAX,EADsC;AAE1CC,UAAAA,OAAO,EAAEP,MAAM,CAACQ,MAAP,CAAcD,OAFmB;AAG1CE,UAAAA,IAAI,EAAET,MAAM,CAACQ,MAAP,CAAcC,IAHsB;AAI1CC,UAAAA,MAAM,EAAEV,MAAM,CAACQ,MAAP,CAAcE,MAJoB;AAK1CC,UAAAA,MAAM,EAAEX,MAAM,CAACQ,MAAP,CAAcG,MALoB;AAM1CC,UAAAA,EAAE,EAAEZ,MAAM,CAACQ,MAAP,CAAcK,IANwB;AAO1CC,UAAAA,KAAK,EAAEd,MAAM,CAACQ,MAAP,CAAcM,KAPqB;AAQ1CC,UAAAA,EAAE,EAAE;AARsC,SAArB;AAAzB;;AAUJ,SAAKnB,aAAL;AACI,6CAAWG,KAAX;AAAkBG,QAAAA,OAAO,qBAAMH,KAAK,CAACG,OAAN,CAAcc,GAAd,CAC3B,UAAAR,MAAM,EAAI;AACN,cAAIA,MAAM,CAACL,EAAP,KAAcH,MAAM,CAACQ,MAAP,CAAcL,EAAhC,EAAoC;AAChCK,YAAAA,MAAM,CAACD,OAAP,GAAiBP,MAAM,CAACQ,MAAP,CAAcD,OAA/B;AACAC,YAAAA,MAAM,CAACC,IAAP,GAAcT,MAAM,CAACQ,MAAP,CAAcC,IAA5B;AACAD,YAAAA,MAAM,CAACE,MAAP,GAAgBV,MAAM,CAACQ,MAAP,CAAcE,MAA9B;AACAF,YAAAA,MAAM,CAACG,MAAP,GAAgBX,MAAM,CAACQ,MAAP,CAAcG,MAA9B;AACAH,YAAAA,MAAM,CAACI,EAAP,GAAYZ,MAAM,CAACQ,MAAP,CAAcI,EAA1B;AACAJ,YAAAA,MAAM,CAACM,KAAP,GAAed,MAAM,CAACQ,MAAP,CAAcM,KAA7B;AACH;;AACD,iBAAON,MAAP;AACH,SAX0B,CAAN;AAAzB;;AAaJ,SAAKX,aAAL;AACI,6CAAWE,KAAX;AAAkBG,QAAAA,OAAO,qBAAMH,KAAK,CAACG,OAAN,CAAce,MAAd,CAC3B,UAAAT,MAAM;AAAA,iBAAIA,MAAM,CAACL,EAAP,KAAcH,MAAM,CAACG,EAAzB;AAAA,SADqB,CAAN;AAAzB;;AAGJ;AACI,aAAOJ,KAAP;AA/BR;AAiCH,CAlCM","sourcesContent":["import { ADD_CLIENT, UPDATE_CLIENT, REMOVE_CLIENT } from \"../types\"\r\n\r\nexport const clientReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_CLIENT: \r\n            return {...state, clients: [...state.clients, {\r\n                id: Date.now().toString(),\r\n                surname: action.client.surname,\r\n                name: action.client.name,\r\n                height: action.client.height,\r\n                weight: action.client.weight,\r\n                bd: action.client.data,\r\n                phone: action.client.phone,\r\n                ex: []\r\n            }]}\r\n        case UPDATE_CLIENT: \r\n            return {...state, clients: [...state.clients.map(\r\n                client => {\r\n                    if (client.id === action.client.id) {\r\n                        client.surname = action.client.surname\r\n                        client.name = action.client.name\r\n                        client.height = action.client.height\r\n                        client.weight = action.client.weight\r\n                        client.bd = action.client.bd\r\n                        client.phone = action.client.phone\r\n                    }\r\n                    return client\r\n                }\r\n            )]}\r\n        case REMOVE_CLIENT: \r\n            return {...state, clients: [...state.clients.filter(\r\n                client => client.id !== action.id\r\n            )]}\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}